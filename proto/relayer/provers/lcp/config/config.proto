syntax = "proto3";
package relayer.provers.lcp.config;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/datachainlab/lcp-go/relay";
option (gogoproto.goproto_getters_all) = false;

message ProverConfig {
    google.protobuf.Any origin_prover = 1;
    // hex string
    string lcp_service_address = 2;
    // unit: seconds
    uint64 lcp_service_dial_timeout = 3;
    // hex string
    string mrenclave = 4;
    repeated string allowed_quote_statuses = 5;
    repeated string allowed_advisory_ids = 6;
    // unit: seconds
    uint64 key_expiration = 7;
    string elc_client_id = 8;
    bool message_aggregation = 9;
    uint64 message_aggregation_batch_size = 10;
    bool is_debug_enclave = 11;

    // --- Operator Config --- //
    // if empty, any operator is allowed (default)
    // otherwise, only operators in this list are allowed
    repeated string operators = 12;
    // this only works when operators is not empty
    // the value must be less than or equal to 1
    Fraction operators_threshold = 13 [(gogoproto.nullable) = false];
    // signer for eip712 commitment
    google.protobuf.Any operator_signer = 14;
    // eip712 params
    oneof operators_eip712_params {
        EVMChainEIP712Params operators_evm_chain_eip712_params = 31;
        CosmosChainEIP712Params operators_cosmos_chain_eip712_params = 32;
    }
}

message Fraction {
    uint64 numerator = 1;
    uint64 denominator = 2;
}

message EVMChainEIP712Params {
    uint64 chain_id = 1;
    string verifying_contract_address = 2;
}

message CosmosChainEIP712Params {
    string chain_id = 1;
    string prefix = 2;
}
