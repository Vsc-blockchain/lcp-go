syntax = "proto3";
package lcp.service.elc.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "ibc/core/client/v1/client.proto";

option go_package = "github.com/datachainlab/lcp/go/relay/elc";
option (gogoproto.goproto_getters_all) = false;

// Query defines the ELC Query service.
service Query {
  rpc Client(QueryClientRequest) returns (QueryClientResponse);
}

message QueryClientRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string client_id = 1;
}

message QueryClientResponse {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // light client state
  google.protobuf.Any client_state = 1 [(gogoproto.moretags) = "yaml:\"client_state\""];
  // consensus state associated with the client that corresponds to a given
  // height.
  google.protobuf.Any consensus_state = 2 [(gogoproto.moretags) = "yaml:\"consensus_state\""];
}
